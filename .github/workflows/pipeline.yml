name: Automated CICD Pipeline

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/demo-app
  IMAGE_TAG: ${{ github.sha }}

jobs:
  pipeline:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ---------- CI: build & basic health test (always runs) ----------
      - name: Build app image
        run: docker build -t demo-app:ci -f app/Dockerfile app

      - name: Run healthcheck (FastAPI /health)
        run: |
          cid=$(docker run -d -p 8080:8080 demo-app:ci)
          sleep 3
          curl -f http://localhost:8080/health
          docker rm -f $cid

      # ðŸ”½ NEW: compute lowercase image ref
      - name: Compute lowercase image ref
        run: |
          REPO_LC="${GITHUB_REPOSITORY,,}"                 # lower-case
          echo "IMAGE_REF=${{ env.REGISTRY }}/${REPO_LC}/demo-app" >> $GITHUB_ENV
          echo "Computed IMAGE_REF=$IMAGE_REF"

      # ---------- Deploy steps (only on main branch) ----------
      - name: Login to GHCR
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install crane (for tag copy)
        if: github.ref == 'refs/heads/main'
        uses: imjasonh/setup-crane@v0.4

      - name: Snapshot current â†’ previous (if exists)
        if: github.ref == 'refs/heads/main'
        run: |
          set -e
          IMAGE=${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          if crane ls $IMAGE | grep -q "^current$" ; then
            echo "Tagging current â†’ previous"
            crane cp $IMAGE:current $IMAGE:previous
          else
            echo "No :current tag yet; skipping previous snapshot."
          fi

      - name: Build & push new image
        if: github.ref == 'refs/heads/main'
        uses: docker/build-push-action@v6
        with:
          context: app
          file: app/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Advance :current to new image
        if: github.ref == 'refs/heads/main'
        run: |
          crane cp ghcr.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }} ghcr.io/${{ env.IMAGE_NAME }}:current

      - name: Post-deploy health check
        if: github.ref == 'refs/heads/main'
        id: health
        run: |
          set -e
          docker pull ghcr.io/${{ env.IMAGE_NAME }}:current
          # You can toggle this repo variable to simulate failure
          FAIL=${{ vars.FAIL_HEALTHCHECK }}
          cid=$(docker run -d -p 8080:8080 -e FAIL_HEALTHCHECK=$FAIL ghcr.io/${{ env.IMAGE_NAME }}:current)
          sleep 3
          set +e
          curl -f http://localhost:8080/health
          STATUS=$?
          docker rm -f $cid
          if [ $STATUS -ne 0 ]; then
            echo "health=fail" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Notify Slack (success)
        if: success() && github.ref == 'refs/heads/main'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {"text": "âœ… Deploy succeeded for ${{ github.repository }}@${{ github.sha }}"}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK

      - name: Rollback on failure
        if: failure() && github.ref == 'refs/heads/main'
        run: |
          set -e
          IMAGE=ghcr.io/${{ env.IMAGE_NAME }}
          if crane ls $IMAGE | grep -q "^previous$" ; then
            crane cp $IMAGE:previous $IMAGE:current
            echo "Rolled back :current to :previous"
          else
            echo "No :previous tag to rollback to."
          fi

      - name: Notify Slack (failure/rollback)
        if: failure() && github.ref == 'refs/heads/main'
        uses: slackapi/slack-github-action@v1.27.0
        with:
          payload: |
            {"text": "ðŸš¨ Deploy failed for ${{ github.repository }}@${{ github.sha }}. Auto-rollback executed to previous image."}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
